case_when(country %in% valid_country_names$country_name_clean ~ country,
beneficiary %in% valid_country_names$country_name_clean ~ beneficiary))%>%
mutate(beneficiary = if_else(beneficiary %in% valid_country_names$country_name_clean, country, beneficiary))%>%
select(-country)%>%
rename(country = country_clean)%>%
mutate(beneficiary = case_when(
grepl("Aparati", beneficiary) & grepl("Drej", beneficiary) ~ "Aparati i Drejtorisë së Policisë së Shtetit",
country == "Austria" & grepl("Ministry", beneficiary) & grepl("Interior", beneficiary) ~ "Federal Ministry of Interior",
country == "Austria" ~ str_remove_all(beneficiary, "Austria - "),
country == "Belarus" & grepl("State Border Committee|State Border Commitee", beneficiary) ~ "State Border Committee",
country == "Belgium" & grepl("agentschap|AGENTSCHAP", beneficiary) ~ "Fedasil (Federaal agentschap voor de opvang van asielzoekers)",
country == "Belgium" & grepl("Federal Police|Federal police|Federale Politie", beneficiary) ~ "Federal Police",
country == "Belgium" & grepl("Department of Federal Immigration|Vreemdelingenzaken", beneficiary) ~ "Department of Federal Immigration (Dienst Vreemdelingenzaken)",
country == "Belgium" & grepl("Caritas International Belgium", beneficiary) ~ "Caritas International Belgium, Non-profit association",
country == "Belgium" & grepl("International Returns & Reintegration Assistance", beneficiary) ~ "International Returns & Reintegration Assistance",
country == "Belgium" ~ str_remove_all(beneficiary, "Belgium - "),
country == "Bosnia and Herzegovina" ~ str_remove_all(beneficiary, "Bosnia and Hercegovina - "),
country == "Bulgaria" & grepl("Chief Directorate", beneficiary) ~ "Chief Directorate Border Police - Ministry of Interior",
country == "Bulgaria" & grepl("National Police Service", beneficiary) ~ "National Police Service - Ministry of Interior",
country == "Bulgaria" & grepl("Ministry", beneficiary) & grepl("Interior", beneficiary) ~ "Bulgarian Ministry of Interior",
country == "Croatia" & grepl("Financial", beneficiary) & grepl("Material", beneficiary) ~ "Directorate for Financial-Material Affairs, Ministry of Interior",
country == "Croatia" & grepl("Police Academy", beneficiary) ~ "Police Academy, Ministry of Interior",
country == "Croatia" & grepl("Ministry", beneficiary) & grepl("Interior", beneficiary) ~ "Croatian Ministry of Interior",
country == "Cyprus" & grepl("Police", beneficiary) & grepl("Headquarters", beneficiary) ~ "Cyprus Police, Police Headquarters",
country == "Cyprus" & grepl("Aliens and Immigration", beneficiary) ~ "Cyprus Police, Aliens and Immigration Unit",
country == "Cyprus" ~ str_remove_all(beneficiary, "Cyprus - "),
country == "Czech Republic" & grepl("International Police Cooperation", beneficiary) ~ "International Police Cooperation Directorate, Police of the Czech Republic",
country == "Czech Republic" & grepl("Alien", beneficiary) & grepl("Police", beneficiary) ~ "Directorate of Alien and Border Police, Police of the Czech Republic",
country == "Czech Republic" & grepl("Police", beneficiary) ~ "Police of the Czech Republic",
country == "Czech Republic" & grepl("Ministry", beneficiary)  & grepl("Interior", beneficiary) ~ "Czech Ministry of Interior",
country == "Denmark" & grepl("Danish National Police|Rigspolitiet", beneficiary) ~ "Danish National Police",
country == "Denmark" & grepl("Joint Operations Staff", beneficiary) & grepl("Defense Command", beneficiary) ~ "Joint Operations Staff, Defence Command",
country == "Denmark" & grepl("Defense Command|Defence Command", beneficiary) ~ "Defence Command",
country == "Denmark" & grepl("Danish Immigration Service", beneficiary) ~ "Danish Immigration Service",
country == "Denmark" & grepl("Danish Return Agency", beneficiary) ~ "Danish Return Agency",
country == "Estonia" & grepl("Board", beneficiary)  & grepl("Border", beneficiary) ~ "Police and Border Guard Board",
country == "Estonia" & grepl("Tallinn University of Technology", beneficiary) ~ "Tallinn University of Technology",
country == "Finland" & grepl("Border Guard", beneficiary) ~ "Finnish Border Guard",
country == "Finland" & grepl("Immigration Service", beneficiary) ~ "Finnish Immigration Service",
country == "Finland" & grepl("National Police", beneficiary) ~ "Finnish National Police Board",
country == "Finland" & grepl("Helsinki Police Department", beneficiary) ~ "Helsinki Police Department",
country == "Finland" & grepl("Customs", beneficiary) ~ "Finnish Customs",
country == "Finland" & grepl("Ministry", beneficiary)  & grepl("Interior", beneficiary) ~ "Finnish Ministry of Interior",
country == "France" & grepl("Police", beneficiary) & grepl("Front", beneficiary) ~ "Direction Central de la Police aux Frontieres",
country == "France" & grepl("DCPAF", beneficiary) ~ "Direction Central de la Police aux Frontieres",
country == "France" & grepl("Police Judiciaire|Police Judiciare", beneficiary) ~ "Direction Centrale de la Police Judiciaire",
country == "France" & grepl("ecurite", beneficiary) & grepl("ublique", beneficiary) ~ "Direction Centrale de la Securite Publique",
country == "France" & grepl("compagnies republicaines de securite|Compagnies Republicaines de Securite", beneficiary) ~ "Direction Centrale des compagnies republicaines de securite",
country == "France" & grepl("endarmerie nationale|endarmerie Nationale", beneficiary) ~ "Direction Generale de la Gendarmerie nationale",
country == "France" & grepl("Douanes et Droits", beneficiary) ~ "Direction Generale des Douanes et Droits Indirects",
country == "France" & grepl("Navy|Marine", beneficiary) ~ "French Navy",
country == "France" & grepl("trangers en France|des etrangers", beneficiary) ~ "Ministère de l'intérieur, Direction générale des étrangers en France",
country == "France" & grepl("des finances et de l'outre-mer", beneficiary) ~ "Ministères économiques et financiers - direction du budget, bureau de l'économie, des finances et de l'outre-mer",
country == "France" & grepl("Prefecture de Police", beneficiary) ~ "Prefecture de Police",
country == "France" & grepl("eveloppement Solidaire", beneficiary) ~ "Ministere de l'Immigration, de l'Integration, de l'Identite Nationale et du Developpement Solidaire",
country == "France" & grepl("Ecole Nationale Superieure de la Police", beneficiary) ~ "Ecole Nationale Superieure de la Police",
country == "France" & grepl("cologique et solidaire", beneficiary) ~ "Ministère de la Transition écologique et solidaire",
country == "Georgia" & grepl("Border Police", beneficiary) ~ "Border Police of Georgia",
country == "Georgia" & grepl("Patrol Police", beneficiary) ~ "Patrol Police Department",
country == "Germany" & grepl("direktion|Federal Police Regional Office", beneficiary)& grepl("Bad Bramstedt", beneficiary) ~ "Federal Police Regional Office Bad Bramstedt",
country == "Germany" & grepl("Federal Police", beneficiary)& grepl("Koblenz", beneficiary) ~ "Federal Police Regional Office Koblenz",
country == "Germany" & grepl("Bundespolizeipraesidium|Bundespolizeiprasidium|Bundespolizeipresidium|BundespolizeiprÃ¤sidium|Bundespolozeipraesidium|Bundespolzeipraesidium|Federal Police Central Office", beneficiary) ~ "Federal Police Central Office",
country == "Germany" & grepl("Federal Border Police Headquart", beneficiary) ~ "Federal Border Police Headquarters",
country == "Germany" & grepl("direktion", beneficiary) ~ "Federal Police Regional Office",
country == "Germany" & grepl("MaST", beneficiary) ~ "School and Training Centre for Maritime Policing, German Federal Police",
country == "Germany" & grepl("Federal Police", beneficiary) ~ "German Federal Police",
country == "Germany" ~ str_remove_all(beneficiary, "Germany - "),
country == "Greece" & grepl("Ministry of Maritime Affairs and Insular Policy|Hellenic Coast Guard|Hellenic Cost Guard", beneficiary) ~ "Hellenic Coast Guard",
country == "Greece" & grepl("Aliens Division", beneficiary) ~ "Hellenic Police, Aliens Division",
country == "Greece" & grepl("Hellenic Police|Police-Hellenic|Police Headquarters", beneficiary) ~ "Hellenic Police, Ministry of Public Order and Citizens' Protection",
country == "Hungary" & grepl("National Police", beneficiary) ~ "Hungarian National Police",
country == "Hungary" & grepl("National Police|Police Headquarters|Policy Headquarters|Police HQ", beneficiary) ~ "Hungarian National Police",
country == "Hungary" & grepl("Law Enforcement School of Szeged", beneficiary) ~ "Law Enforcement School of Szeged",
country == "Hungary" ~ str_remove_all(beneficiary, "Hungary - "),
country == "Iceland" & grepl("Icelandic Coast Guard", beneficiary) ~ "Icelandic Coast Guard",
country == "Iceland" & grepl("National Commissioner of the Icelandic Police|National Police Commissioner", beneficiary) ~ "National Police Commissioner",
country == "Iceland" & grepl("flugvelli", beneficiary) ~ "Police department at Keflavík Airport",
country == "Iceland" ~ str_remove_all(beneficiary, "Iceland - "),
grepl("European Technology and Training Centre", beneficiary) ~ "European Technology and Training Centre (NGO)",
country == "Ireland" & grepl("Naturalisation and Immigration Service", beneficiary) ~ "Naturalisation and Immigration Service",
country == "Italy" & grepl("Italian Coast Guard|Polizia delle Frontiere|Polizia della Frontiere", beneficiary) ~ "Guardia Costiera",
country == "Italy" & grepl("Guardia di Finanza|Gurdia di Finanza", beneficiary) ~ "Guardia di Finanza",
country == "Italy" & grepl("Ministero|Ministerio|Ministro|Ministry", beneficiary) & grepl("Interior|Interno", beneficiary) ~ "Italian Ministry of Interior",
country == "Kosovo" & grepl("General Directorate of Kosovo Police", beneficiary) ~ "General Directorate of Kosovo Police",
country == "Latvia" & grepl("State Border Guard", beneficiary) ~ "State Border Guard",
country == "Lithuania" & grepl("Migration Department", beneficiary) ~ "Migration Department, Ministry of Interior",
country == "Lithuania" & grepl("State Border Guard Service", beneficiary) ~ "State Border Guard Service Lithuania",
country == "Luxembourg" & grepl("Ministry", beneficiary) & grepl("Internal Security", beneficiary) ~ "Ministry of Internal Security",
country == "Luxembourg" & grepl("Police Grand Ducale|Police Grand-Ducale|Police Grand- Ducale", beneficiary)  ~ "Police Grand Ducale",
country == "Luxembourg" & grepl("Ministry of Foreign Affairs", beneficiary) ~ "Ministry of Foreign Affairs",
country == "Macedonia" & grepl("Public Security Bureau", beneficiary) ~ "Public Security Bureau, Ministry of Internal Affairs",
country == "Macedonia" & grepl("Ministry", beneficiary) & grepl("Interior|Internal", beneficiary) ~ "Ministry of Internal Affairs Macedonia",
country == "Malta" & grepl("Armed Forces of Malta|Frontex Central National Authority", beneficiary) ~ "Armed Forces of Malta",
country == "Malta" & grepl("Malta Police Force|Police General Headquarters", beneficiary) ~ "Malta Police Force",
country == "Moldova" & grepl("Border Guard|Border Police|BORDER POLICE", beneficiary) ~ "Border Police",
country == "Montenegro" & grepl("Police Directorate|Police Direcorate", beneficiary) ~ "Police Directorate",
country == "Montenegro" & grepl("Ministry", beneficiary)& grepl("Interior|Internal", beneficiary) ~ "Ministry of Internal Affairs Montenegro",
country == "Netherlands" & grepl("Marechaussee|NFPOC|KMar", beneficiary) ~ "Royal Marechaussee",
country == "Netherlands" & grepl("Repatriation and Departure Service|Repatration and Departure Service|Repatriation and departure services", beneficiary) ~ "Repatriation and Departure Service",
country == "Netherlands" & grepl("Transport and Support Service", beneficiary) ~ "Transport and Support Service, Ministry for Security and Justice",
country == "Netherlands" ~ str_remove_all(beneficiary, "Netherlands - |Netherlands-"),
country == "Nigeria" & grepl("Immigration Service", beneficiary) ~ "Immigration Service",
country == "Norway" & grepl("National Police Directorate", beneficiary) ~ "National Police Directorate",
country == "Norway" & grepl("National Police Immigration Service", beneficiary) ~ "National Police Immigration Service",
country == "Pakistan" ~ str_remove_all(beneficiary, "WELDO - "),
country == "Poland" & grepl("Training Centre", beneficiary)& grepl("Koszalin", beneficiary) ~ "Border Guard Training Centre, Koszalin",
country == "Poland" & grepl("Training Centre", beneficiary)& grepl("Ketrzyn", beneficiary) ~ "Border Guard Training Centre, Ketrzyn",
country == "Poland" & grepl("Border Guard", beneficiary) ~ "Border Guard",
country == "Portugal" & grepl("Guarda Nacional Republicana", beneficiary) ~ "Guarda Nacional Republicana",
country == "Portugal" & grepl("Marinha Portuguesa|Navy", beneficiary) ~ "Portugese Navy",
country == "Portugal" & grepl("Estado-Maior da ForÃ§a AÃ©|Air Force", beneficiary) ~ "Portugese Air Force",
country == "Portugal" & grepl("Maritime Analysis and Operations Centre (Narcotics)", beneficiary) ~ "Maritime Analysis and Operations Centre (Narcotics)",
country == "Portugal" & grepl("Maritime Police", beneficiary) ~ "Maritime Police",
country == "Portugal" & grepl("National Maritime Authority", beneficiary) ~ "National Maritime Authority",
country == "Portugal" & grepl("PolÃ­cia de SeguranÃ§a PÃºblica|Public Security Police", beneficiary) ~ "National Maritime Authority",
country == "Portugal" & grepl("NFPOC|Servico de Estrangeiros e Fronteiras|Servico de estrangeiros e fronteiras", beneficiary) ~ "Foreigners and Borders Service",
country == "Romania" & grepl("General Inspectorate for Immigration|General Inspectore for Immigration", beneficiary) ~ "General Inspectorate for Immigration",
country == "Romania" & grepl("General Inspectorate of Aviation", beneficiary) ~ "General Inspectorate of Aviation",
country == "Romania" & grepl("General Inspectorate", beneficiary) & grepl("Border Police", beneficiary) ~ "Romanian Border Police / Coast Guard",
country == "Romania" & grepl("RBP|Coast Guard|Romanian Border Police", beneficiary) ~ "Romanian Border Police / Coast Guard",
country == "Romania" & grepl("General Inspectorate", beneficiary) & grepl("Police", beneficiary) ~ "Romanian Police",
country == "Romania" & grepl("Scoala de Formare Initiala si Continua a Personalului Politiei de Frontiera Iasi|School for Basic and Further Training of Border Police Personnel", beneficiary) ~ "School for Training of Border Police",
country == "Romania" & grepl("School for Improvement of Training of Border Police Personnel Drobeta Turnu-Severin", beneficiary) ~ "School for Improvement of Training of Border Police",
country == "Serbia" & grepl("Ministry", beneficiary) & grepl("Interior|Internal", beneficiary) ~ "Ministry of Internal Affairs",
country == "Slovakia" & grepl("Border and Alien Police|Border Police|Border and Foreign Police", beneficiary) & grepl("Bureau", beneficiary) ~ "Bureau of Border and Alien Police",
country == "Slovakia" & beneficiary %in% c("Border and Alien Police","Minsitry of Interior, Border and Alien Police") ~ "Bureau of Border and Alien Police",
country == "Slovakia" & grepl("Border and Alien Police|Border Police", beneficiary) & grepl("Presov", beneficiary) ~ "Border and Alien Police Directorate Presov",
country == "Slovakia" & grepl("Border and Alien Police|Border Police", beneficiary) & grepl("Directorate", beneficiary) ~ "Border and Alien Police Directorate",
country == "Slovakia" & grepl("Police Force", beneficiary) ~ "Police Force",
country == "Slovakia" & grepl("Ministry of Interior of the Slovak Republic|Slovakia - Ministry of Interior", beneficiary) ~ "Slovak Ministry of Interior",
country == "Slovenia" & grepl("Police", beneficiary) ~ "Police",
country == "Slovenia" & grepl("nterior|MoI", beneficiary) ~ "Slovenian Ministry of Interior",
country == "Spain" & grepl("Cuerpo Nacional de Policia|National Police Corps", beneficiary) ~ "Cuerpo Nacional de Policia",
country == "Spain" & grepl("Comisaría General de Extranjería y Fronteras|Comisaria General de Extranjeria y Fronteras|Comisaria General de la Extranjeria y Fronteras", beneficiary) ~ "Comisaría General de Extranjería y Fronteras",
country == "Spain" & grepl("Jefatura Fiscal y de Fronteras", beneficiary) ~ "Jefatura Fiscal y de Fronteras",
country == "Spain" & grepl("Directorate General for International Relations and Foreign Affairs|Directorate General for International Relations and Migration", beneficiary) ~ "General Directorate for International Relations and Immigration",
country == "Spain" & grepl("National Police School", beneficiary) ~ "National Police School",
country == "Spain" & grepl("Direccion General de la Policia y de la Guardia Civil", beneficiary) ~ "Direccion General de la Policia y de la Guardia Civil",
country == "Spain" & grepl("Guardia Civil", beneficiary) ~ "Guardia Civil",
country == "Spain" & grepl("Direccion General de la Policia|Direccion General de la policia", beneficiary) ~ "Direccion General de la Policia",
country == "Spain" & grepl("Ministerio del Interior", beneficiary) ~ "Spanish Ministry of Interior",
country == "Sweden" & grepl("National Burea of Investigation|National Bureau of Investigation", beneficiary) ~ "National Bureau of Investigation",
country == "Sweden" & grepl("National Criminal Police", beneficiary) ~ "National Criminal Police",
country == "Sweden" & grepl("National Operations Department", beneficiary) ~ "National Operations Department",
country == "Sweden" & grepl("Coast Guard", beneficiary) ~ "Swedish Coast Guard",
country == "Sweden" & grepl("Swedish Migration Agency", beneficiary) ~ "Swedish Migration Agency",
country == "Sweden" & grepl("Swedish Police Authority", beneficiary) ~ "Swedish Police Authority",
country == "Switzerland" & grepl("Custom|Zoll|Border Guard", beneficiary) ~ "Customs/Border Guard",
country == "Switzerland" & grepl("State Secretariat for Migration|Federal Office for Migration", beneficiary) ~ "State Secretariat for Migration",
country == "Turkey" & grepl("Border Management Department", beneficiary) ~ "Ministry of Interior, Border Management Department",
country == "Turkey" & grepl("Border Gates Department", beneficiary) ~ "Police, Border Gates Department",
country == "Turkey" & grepl("International Relations Department", beneficiary) ~ "Police, International Relations Department",
country == "Ukraine" & grepl("State Border Guard Service", beneficiary) ~ "State Border Guard Service Ukraine",
country == "United Kingdom" & grepl("Border Agency", beneficiary) ~ "Border Agency",
is.na(beneficiary) ~ "unknown",
T ~ beneficiary
),
unit_sector = if_else(grant_no == "2009/376a/", "SBS", unit_sector),
unit_sector = if_else(unit_sector == "lBS", "LBS", unit_sector),
unit_sector = if_else(unit_sector %in% c("ECRet","ECRET","Ecret"), "ECRET", unit_sector),
beneficiary = if_else(beneficiary == "Ministry of Justice", glue("Ministry of Justice {country}"), beneficiary),
beneficiary = if_else(beneficiary == "Ministry of Interior", glue("Ministry of Interior {country}"), beneficiary))%>%
mutate(beneficiary = str_replace_all(beneficiary, ", Non-governmental organisation", " (NGO)"),
country = str_replace_all(country, "Macedonia", "North Macedonia"))%>%
mutate(
project_clean = str_remove_all(project, "^[^ ]+ "),
project_cat1 = case_when(
grepl("Technical Equipment|technical equipment|Technical  Equipment|Technical equipment", project)  &  grepl("Human Resources|uman resources|human  resources", project) ~ "Technical Equipment & Human Resources",
grepl("Technical Equipment|technical equipment|Technical  Equipment|Technical equipment", project) ~ "Technical Equipment",
grepl("Human Resources|uman resources|human  resources", project) ~ "Human Resources",
grepl("Poseidon", project) ~ "Poseidon",
grepl("Triton", project) ~ "Triton",
grepl("Hermes", project) ~ "Hermes",
grepl("Hera", project) ~ "Hera",
grepl("FOA", project) ~ "FOA",
grepl("Aeneas", project) ~ "Aeneas",
grepl("Indalo", project) ~ "Indalo",
grepl("Neptune", project) ~ "Neptune",
grepl("Attica|ATTICA", project) ~ "Attica",
grepl("Eurocup", project) ~ "Eurocup",
grepl("Hammer", project) ~ "Hammer",
grepl("Alexis", project) ~ "Alexis",
grepl("Coordination Points", project) ~ "Coordination Points",
grepl("Jupiter", project) ~ "Jupiter",
grepl("Hubble|HUBBLE", project) ~ "Hubble",
grepl("VEGA Children|Vega Children|Vega children", project) ~ "VEGA Children",
grepl("Minerva", project) ~ "Minerva",
grepl("Saturn", project) ~ "Saturn",
grepl("Uranus", project) ~ "Uranus",
grepl("Nautilus", project) ~ "Nautilus",
grepl("Training|training", project) & grepl("corps|Corps", project) ~ "Trainings standing corps",
grepl("FIMO Deployment", project) ~ "FIMO Deployment",
grepl("Focal Points", project) ~ "Focal Points",
grepl("ECRET|ECret|ECRet", project) ~ "European Centre for Returns",
grepl("Return Operation|RO |Return operations|ROs |RO-|RO$", project) ~ "Return Operations"
),
project_cat2 = case_when(
grepl("Technical Equipment", project_cat1) & grepl("heavy|Heavy", project) ~ "Heavy technical equipment",
grepl("Technical Equipment", project_cat1) & grepl("light|Light", project) ~ "Light technical equipment"
))%>%
mutate(project_clean = if_else(is.na(project_cat1), project_clean, project_cat1))%>%
select(-project_cat1, -project_cat2)%>%
left_join(read_csv("abbreviations.txt")%>%select(-source))
alldata_sorted <- data_allyears_clean %>%
group_by(country) %>%
mutate(rank = rank(desc(eur))) %>%
arrange(country, rank) %>%
ungroup() %>%
select(-rank)
write_csv(alldata_sorted, "output/frontex_grants_all_grants.csv")
for(cur_country in unique(alldata_sorted$country)){
write_csv(data_allyears_clean %>% filter(country == cur_country),
glue("output/frontex_grants_all_{cur_country}.csv"))
}
sankey_agg <- data_allyears_clean %>%
group_by(country, beneficiary)%>%
summarize(eur = sum(eur, na.rm = T))
sankey <- sankey_agg %>%
group_by(country) %>%
summarize(total_eur = sum(eur)) %>%
arrange(desc(total_eur)) %>%
inner_join(sankey_agg, by = "country") %>%
group_by(country) %>%
mutate(rank = rank(desc(eur))) %>%
arrange(desc(total_eur), rank) %>%
ungroup() %>%
select(-total_eur, -rank )
write_csv(sankey, "output/frontex_grants_beneficiaries.csv")
sankey %>%
group_by(beneficiary)%>%
mutate(n = n_distinct(country))%>%
filter(n > 1)
countries_sectors_singles <- data_allyears_clean %>%
select(country, unit_sector_long, eur, year)%>%
group_by(year, country, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country)%>%
filter(n_distinct(year) > 1)%>%
ungroup()
countries_sectors_agg <- countries_sectors_singles %>%
group_by(year, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm = T),
country = "all")
countries_sectors <- bind_rows(countries_sectors_agg %>%
ungroup()%>%
spread(key = unit_sector_long, value = eur),
countries_sectors_singles %>%
ungroup()%>%
spread(key = unit_sector_long, value = eur) %>%
arrange(country))%>%
mutate_all(~replace_na(.,0))%>%
rename("n.a." = "<NA>")
write_csv(countries_sectors, "output/frontex_grants_countries_sectors.csv")
countries <- ne_countries(returnclass = "sf", scale = "medium")%>%
filter(name_long != "France")%>%
bind_rows(
france <- ne_countries(country = "France", returnclass = "sf", scale = "medium") %>%
st_cast("POLYGON") %>%
mutate(area = st_area(geometry))%>%
filter(area == max(area))
# st_crop(c(xmin = -10, ymin = 40, xmax = 20, ymax = 55))
)
background_countries <- countries %>%
filter(continent %in% c("Europe", "Asia", "Africa"))
fn <-  "output/background_countries.geojson"
if (file.exists(fn)){
file.remove(fn)
}
write_sf(background_countries,
fn)
total_countries_years <- data_allyears_clean %>%
group_by(country, year)%>%
summarize(eur = sum(eur))%>%
spread(key = year, value= eur)%>%
mutate_all(~replace_na(., 0))%>%
gather(-country, key = year, value = eur)
geo_grants_years <- countries %>%
select(name_long)%>%
# mutate(name_long = if_else(name_long == "North Macedonia", "Macedonia", name_long))%>%
rename(name = name_long)%>%
right_join(total_countries_years, by = c("name" = "country"))
fn <-  "output/frontex_grants_countries_years.geojson"
if (file.exists(fn)){
file.remove(fn)
}
write_sf(geo_grants_years,
fn)
total_countries <- data_allyears_clean %>%
group_by(country)%>%
summarize(eur = sum(eur))
geo_grants <- countries %>%
select(name_long)%>%
mutate(name_long = if_else(name_long == "North Macedonia", "Macedonia", name_long))%>%
rename(name = name_long)%>%
right_join(total_countries, by = c("name" = "country"))
fn <-  "output/frontex_grants_countries_total_centroid.geojson"
if (file.exists(fn)){
file.remove(fn)
}
write_sf(geo_grants %>% mutate(geometry = st_centroid(geometry)),
fn)
countries_projects_singles <- data_allyears_clean %>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country, year)%>%
mutate(total_year = sum(eur, na.rm=T))%>%
group_by(country)%>%
mutate(max_year = max(total_year))%>%
group_by(country, project_clean)%>%
mutate(max_project = max(eur, na.rm=T))%>%
ungroup()%>%
mutate(above_thres = if_else(max_project >= 0.02* max_year, T, F))%>%
mutate(project_clean = if_else(above_thres == T, project_clean, "Other"))%>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country)%>%
filter(n_distinct(year) > 1)%>%
ungroup()
countries_projects_agg <- countries_projects_singles %>%
group_by(year, project_clean)%>%
summarize(eur = sum(eur, na.rm = T),
country = "all")%>%
group_by(country, year)%>%
mutate(total_year = sum(eur, na.rm=T))%>%
group_by(country)%>%
mutate(max_year = max(total_year))%>%
group_by(country, project_clean)%>%
mutate(max_project = max(eur, na.rm=T))%>%
ungroup()%>%
mutate(above_thres = if_else(max_project >= 0.02* max_year, T, F))%>%
mutate(project_clean = if_else(above_thres == T, project_clean, "Other"))%>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))
countries_projects <- bind_rows(countries_projects_agg %>%
ungroup()%>%
spread(key = project_clean, value = eur),
countries_projects_singles %>%
ungroup()%>%
spread(key = project_clean, value = eur) %>%
arrange(country))%>%
mutate_all(~replace_na(.,0))
write_csv(countries_projects, "output/frontex_grants_countries_projects.csv")
countries_projects_singles <- data_allyears_clean %>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country, year)%>%
mutate(total_year = sum(eur, na.rm=T))%>%
group_by(country)%>%
mutate(max_year = max(total_year))%>%
group_by(country, project_clean)%>%
mutate(max_project = max(eur, na.rm=T))%>%
ungroup()%>%
mutate(above_thres = if_else(max_project >= 0.05 * max_year, T, F))%>%
mutate(project_clean = if_else(above_thres == T, project_clean, "Other"))%>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country)%>%
filter(n_distinct(year) > 1)%>%
ungroup()
countries_projects_agg <- countries_projects_singles %>%
group_by(year, project_clean)%>%
summarize(eur = sum(eur, na.rm = T),
country = "all")%>%
group_by(country, year)%>%
mutate(total_year = sum(eur, na.rm=T))%>%
group_by(country)%>%
mutate(max_year = max(total_year))%>%
group_by(country, project_clean)%>%
mutate(max_project = max(eur, na.rm=T))%>%
ungroup()%>%
mutate(above_thres = if_else(max_project >= 0.05 * max_year, T, F))%>%
mutate(project_clean = if_else(above_thres == T, project_clean, "Other"))%>%
group_by(year, country, project_clean)%>%
summarize(eur = sum(eur, na.rm=T))
countries_projects <- bind_rows(countries_projects_agg %>%
ungroup()%>%
spread(key = project_clean, value = eur),
countries_projects_singles %>%
ungroup()%>%
spread(key = project_clean, value = eur) %>%
arrange(country))%>%
mutate_all(~replace_na(.,0))
write_csv(countries_projects, "output/frontex_grants_countries_projects.csv")
View(alldata_sorted)
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))
View(sankey_grants)
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
group_by(country, beneficiary, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various"))%>%
group_by(country,project_clean, beneficiary, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))
View(sankey_grants)
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various"))%>%
group_by(country,project_clean, beneficiary, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country) %>%
mutate(rank = if_else(grant_no == "Smaller grants", 10000, rank(desc(eur)))) %>%
arrange(country, rank) %>%
ungroup() %>%
select(-rank)
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Multiple smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various projects"))%>%
group_by(country,project_clean, beneficiary, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))%>%
group_by(country) %>%
mutate(rank = if_else(grant_no == "Multiple smaller grants", 10000, rank(desc(eur)))) %>%
arrange(country, rank) %>%
ungroup() %>%
select(-rank)
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Multiple smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various projects"))
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Multiple smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various projects"))%>%
group_by(country,project_clean, beneficiary,max_year, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))%>%
ungroup()%>%
mutate(display_width = if_else(eur >= 0.01 * max_year, eur, 0.01 * max_year))%>%
group_by(country) %>%
mutate(rank = if_else(grant_no == "Multiple smaller grants", 10000, rank(desc(eur)))) %>%
arrange(country, rank) %>%
ungroup() %>%
select(-rank)
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
sankey_grants <- alldata_sorted %>%
group_by(country)%>%
mutate(max_year = sum(eur, na.rm=T))%>%
mutate(above_thres = if_else(eur >= 0.01 * max_year, T, F))%>%
mutate(grant_no = if_else(above_thres == T, grant_no, "Multiple smaller grants"))%>%
group_by(country, beneficiary, grant_no)%>%
mutate(n_unit_sector = n_distinct(unit_sector_long))%>%
mutate(unit_sector_long = if_else(n_unit_sector == 1, unit_sector_long, "various"))%>%
mutate(n_projects = n_distinct(project_clean))%>%
mutate(project_clean = if_else(n_projects == 1, project_clean, "various projects"))%>%
group_by(country,project_clean, beneficiary,max_year, grant_no, unit_sector_long)%>%
summarize(eur = sum(eur, na.rm=T))%>%
ungroup()%>%
mutate(min_year = 0.02 * max_year)%>%
mutate(display_width = ((eur  * (max_year - min_year)) / max_year) + min_year)%>%
group_by(country) %>%
mutate(rank = if_else(grant_no == "Multiple smaller grants", 10000, rank(desc(eur)))) %>%
arrange(country, rank) %>%
ungroup() %>%
select(-rank)
write_csv(sankey_grants, "output/frontex_grants_sankey.csv")
